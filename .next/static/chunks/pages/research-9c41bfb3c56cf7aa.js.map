{"version":3,"file":"static/chunks/pages/research-9c41bfb3c56cf7aa.js","mappings":"8EACA,4CACA,YACA,WACA,OAAe,EAAQ,IAAgC,CACvD,EACA,UAFsB,mHCwFtB,MAtFiB,KACf,GAAM,CAACA,EAAQC,EAAU,CAAGC,CAAAA,EAAAA,EAAAA,EAqFfC,MArFeD,CAAQA,CAAC,EAAE,EACjC,CAACE,EAAOC,EAAS,CAAGH,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAC,IAC7B,CAACI,EAASC,EAAW,CAAGL,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GACjC,CAACM,EAAWC,EAAa,CAAGP,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAC,CAAEQ,OAAQ,EAAE,CAAEC,SAAU,EAAE,GAE/DC,EAAcC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,UAC9BN,GAAW,GACX,GAAI,CACF,IAAMO,EAAW,MAAMC,EAAAA,CAAKA,CAACC,GAAG,CAAC,6CAA8C,CAC7EC,OAAQ,CACNC,QAAS,WACTC,EAAGf,CACL,CACF,GACAH,EAAUa,EAASM,IAAI,CAACC,QAAQ,CAClC,CAAE,MAAOC,EAAO,CACdC,QAAQD,KAAK,CAAC,yBAA0BA,EAC1C,QAAU,CACRf,GAAW,EACb,CACF,EAAG,CAACH,EAAM,QAEVoB,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRZ,GACF,EAAG,CAACA,EAAY,EAMhBY,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KAINf,EAAa,CACXC,OAHaV,CAGLU,CAHYe,GAAG,CAAC,CAACC,EAAOC,IAAU,SAAmB,OAAVA,EAAQ,IAI3DhB,SAAU,CACR,CACEiB,MAAO,kBACPR,KANOpB,CAMDoB,CANQK,GAAG,CAACC,GAASA,EAAMG,uBAAuB,EAOxDC,YAAa,wBACbC,gBAAiB,yBACnB,EACD,EAKP,EAAG,CAAC/B,EAAO,EAGT,WAACgC,MAAAA,CAAIC,UAAU,gBACb,UAACD,MAAAA,CAAIC,UAAU,gBACb,UAACC,QAAAA,CACCC,KAAK,OACLC,YAAY,4BACZC,MAAOjC,EACPkC,SA/Ba,CA+BHC,GA9BhBlC,EAASmC,EAAMC,MAAM,CAACJ,KAAK,CAC7B,EA8BQJ,UAAU,gDAGd,UAACD,MAAAA,CAAIC,UAAU,gBACb,UAACS,EAAAA,EAAIA,CAAAA,CAACtB,KAAMZ,MAEd,UAACmC,EAAAA,CAAOA,CAAAA,CACNC,eAAgB,CAAEC,QAAS,EAAG,KAAM,EAAG,IAAK,CAAE,EAC9CZ,UAAU,kBACVa,gBAAgB,kCAEf9C,EAAOyB,GAAG,CAAC,CAACC,EAAOC,IAClB,WAACoB,EAAAA,CAAMA,CAACf,GAAG,EAETgB,WAAY,CAAEC,MAAO,IAAK,EAC1BhB,UAAU,8CAEV,UAACiB,KAAAA,CAAGjB,UAAU,6BAAqBP,EAAMyB,KAAK,GAC9C,UAACC,IAAAA,CAAEnB,UAAU,mBAAWP,EAAM2B,WAAW,KALpC1B,MASVrB,GAAW,UAAC8C,IAAAA,CAAEnB,UAAU,uBAAc,iBAG7C,EC/EA,EARqB,IAEjB,MAMWqB,EANX,EAACtB,MAAAA,CAAIC,CAMkBqB,EAAC,OANT,yBACb,UAACnD,EAAQA,CAAAA,gBAAAA","sources":["webpack://_N_E/?4adf","webpack://_N_E/./src/components/Research.js","webpack://_N_E/./src/pages/research.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/research\",\n      function () {\n        return require(\"private-next-pages/research.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/research\"])\n      });\n    }\n  ","import React, { useState, useEffect, useCallback } from 'react';\nimport Masonry from 'react-masonry-css';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\n\nconst Research = () => {\n  const [papers, setPapers] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\n\n  const fetchPapers = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('https://api.nasa.gov/techport/api/projects', {\n        params: {\n          api_key: 'DEMO_KEY',\n          q: query\n        }\n      });\n      setPapers(response.data.projects);\n    } catch (error) {\n      console.error(\"Error fetching papers:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    fetchPapers();\n  }, [fetchPapers]);\n\n  const handleSearch = (event) => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    const updateChartData = () => {\n      const labels = papers.map((paper, index) => `Paper ${index + 1}`);\n      const data = papers.map(paper => paper.estimatedCompletionDate);\n      setChartData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Research Papers',\n            data: data,\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          },\n        ],\n      });\n    };\n\n    updateChartData();\n  }, [papers]);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search research papers...\"\n          value={query}\n          onChange={handleSearch}\n          className=\"w-full p-2 border border-gray-300 rounded\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <Line data={chartData} />\n      </div>\n      <Masonry\n        breakpointCols={{ default: 3, 1100: 2, 700: 1 }}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {papers.map((paper, index) => (\n          <motion.div\n            key={index}\n            whileHover={{ scale: 1.05 }}\n            className=\"p-4 bg-white rounded-lg shadow-lg\"\n          >\n            <h3 className=\"text-sm font-bold\">{paper.title}</h3>\n            <p className=\"text-xs\">{paper.description}</p>\n          </motion.div>\n        ))}\n      </Masonry>\n      {loading && <p className=\"text-center\">Loading...</p>}\n    </div>\n  );\n};\n\nexport default Research;\n","import React from 'react';\nimport Research from '../components/Research';\n\nconst ResearchPage = () => {\n  return (\n    <div className=\"research-page\">\n      <Research />\n    </div>\n  );\n};\n\nexport default ResearchPage;"],"names":["papers","setPapers","useState","Research","query","setQuery","loading","setLoading","chartData","setChartData","labels","datasets","fetchPapers","useCallback","response","axios","get","params","api_key","q","data","projects","error","console","useEffect","map","paper","index","label","estimatedCompletionDate","borderColor","backgroundColor","div","className","input","type","placeholder","value","onChange","handleSearch","event","target","Line","Masonry","breakpointCols","default","columnClassName","motion","whileHover","scale","h3","title","p","description","ResearchPage"],"sourceRoot":"","ignoreList":[]}
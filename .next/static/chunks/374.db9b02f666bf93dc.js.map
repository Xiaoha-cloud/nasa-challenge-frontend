{"version":3,"file":"static/chunks/374.db9b02f666bf93dc.js","mappings":"mMAKA,IAAMA,EAAMC,IAAQ,IAAM,4BAAuB,CAACC,IAAI,CAACC,GAAOA,EAAIC,IAA/CH,QAA2D,yCAAKI,KAAK,IAClFC,EAAYL,IAAQ,IAAM,4BAAuB,CAACC,IAAI,CAACC,GAAOA,EAAIG,IAA/CL,KAAwD,yCAAKI,IAAK,KACrFE,EAASN,IAAQ,IAAM,4BAAuB,CAACC,IAAI,CAACC,GAAOA,EAAII,IAA/CN,EAAqD,yCAAKI,KAAK,IAC/EG,EAAQP,IAAQ,IAAM,4BAAuB,CAACC,IAAI,CAACC,GAAOA,EAAIK,IAA/CP,CAAoD,yCAAKI,KAAK,IA2CnF,EAzCmB,KACjB,GAAM,CAACI,EAAaC,EAAe,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAC,CAAC,EAAG,EAAE,EAErDC,CAAAA,CAsCuBC,CAtCvBD,CAsCwB,CAtCxBA,SAAAA,CAASA,CAAC,KACR,IAAME,EAAmB,UACvB,GAAI,CACF,IAAMC,EAAW,MAAMC,MAAMC,GAAG,CAAC,kDACjCP,EAAe,CAACK,EAASG,IAAI,CAACC,QAAQ,CAAEJ,EAASG,IAAI,CAACE,SAAS,CAAC,CAClE,CAAE,MAAOC,EAAO,CACdC,QAAQD,KAAK,CAAC,+BAAgCA,EAChD,CACF,EAEAP,IACA,IAAMS,EAAWC,YAAYV,EAAkB,KAC/C,MAAO,IAAMW,cAAcF,EAC7B,EAAG,EAAE,EAEL,IAAMG,EAAU,GAAIC,CAAAA,GAAAA,EAAAA,IAAAA,CAAM,CACxBC,QAAS,gBACTC,SAAU,CAAC,GAAI,GAAG,CAClBC,WAAY,CAAC,GAAI,GAAG,CACpBC,YAAa,CAAC,EAAG,CAAC,GAAG,CACrBC,UAAW,eACb,GAEA,MACE,WAAChC,EAAAA,CAAIiC,OAAQxB,EAAayB,KAAM,EAAGC,MAAO,CAAEC,OAAQ,QAASC,MAAO,MAAO,YACzE,UAAC/B,EAAAA,CACCgC,IAAI,qDACJC,YAAY,0FAEd,UAAChC,EAAAA,CAAOiC,SAAU/B,EAAagC,KAAMf,WACnC,WAAClB,EAAAA,WAAM,uBACe,UAACkC,KAAAA,CAAAA,GAAK,aAAWjC,CAAW,CAAC,EAAE,CAAC,UAACiC,KAAAA,CAAAA,GAAK,cAAYjC,CAAW,CAAC,EAAE,QAK9F","sources":["webpack://_N_E/./src/components/ISSLiveMap.js","webpack://_N_E/./node_modules/leaflet/dist/leaflet.css"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nconst Map = dynamic(() => import('react-leaflet').then(mod => mod.MapContainer), { ssr: false });\nconst TileLayer = dynamic(() => import('react-leaflet').then(mod => mod.TileLayer), { ssr: false });\nconst Marker = dynamic(() => import('react-leaflet').then(mod => mod.Marker), { ssr: false });\nconst Popup = dynamic(() => import('react-leaflet').then(mod => mod.Popup), { ssr: false });\n\nconst ISSLiveMap = () => {\n  const [issPosition, setIssPosition] = useState([0, 0]);\n\n  useEffect(() => {\n    const fetchIssPosition = async () => {\n      try {\n        const response = await axios.get('https://api.wheretheiss.at/v1/satellites/25544');\n        setIssPosition([response.data.latitude, response.data.longitude]);\n      } catch (error) {\n        console.error(\"Error fetching ISS position:\", error);\n      }\n    };\n\n    fetchIssPosition();\n    const interval = setInterval(fetchIssPosition, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const issIcon = new L.Icon({\n    iconUrl: '/iss-icon.png',\n    iconSize: [50, 50],\n    iconAnchor: [25, 25],\n    popupAnchor: [0, -25],\n    className: 'iss-icon-glow'\n  });\n\n  return (\n    <Map center={issPosition} zoom={2} style={{ height: \"400px\", width: \"100%\" }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={issPosition} icon={issIcon}>\n        <Popup>\n          ISS Current Location<br />Latitude: {issPosition[0]}<br />Longitude: {issPosition[1]}\n        </Popup>\n      </Marker>\n    </Map>\n  );\n};\n\nexport default ISSLiveMap;","// extracted by mini-css-extract-plugin"],"names":["Map","dynamic","then","mod","MapContainer","ssr","TileLayer","Marker","Popup","issPosition","setIssPosition","useState","useEffect","ISSLiveMap","fetchIssPosition","response","axios","get","data","latitude","longitude","error","console","interval","setInterval","clearInterval","issIcon","L","iconUrl","iconSize","iconAnchor","popupAnchor","className","center","zoom","style","height","width","url","attribution","position","icon","br"],"sourceRoot":"","ignoreList":[1]}